OSI 7 계층이란
네트워크에서 통신이 일어나는 과정을 7단계로 나눈 것을 말하며
통신이 일어나는 과정을 단계별로 파악하여 흐름을 한눈에 알아보거나 이해하기쉽고
7단계로 나누어 특정한 곳에 이상이 생기면 다른 단계의 장비 및 소프트웨어를 건들이지 않고 이상이 생긴 단계만
수정할 수 있기 떄문에 7계층으로 구분하였다

만약 인터넷을 하는데 연결이 끊어졌다 가정하고
모든 PC가 연결이 끊어진거면 3계층(라우터) 이나 1계층(회선) 이 문제일것이고,
한 PC만 문제가 발생하고 인터넷브라우저의 문제라면 7계층(어플리케이션)
또는 2계층의 데이터 링크 쪽을 확인할 수 있을것으로 판단 다른 계층의 장비나 소프트웨어를 건들이지 않는것이다.

1. 물리계층(Physical Layer)
- 이 계층은 데이터를 단지 전달만하는 역할을한다 즉 데이터를 0과 1의 비트 형태로 변환하여 전송하고
    데이터에 에러가 있는지 또는 어떤 데이터인지에 대해서는 신경쓰지 않는다
    케이블이나 허브 등을 통해 전달
2. 데이터 링크 계층(Data Link Layer)
- 물리계층을 통해 송수신되는 정보의 오류와 흐름을 관리하여 안전한 정보의 전달을 할수있도록 도와주는 역할
    통신에서의 오류를 찾고 재전송도 하는기능
    이 계층에서는 "맥 주소"를 가지고 통신을 한다
    전송되는 단위를 프레임이라고 하며 대표적인 장비로 브릿지,스위치 등이 있고 여기서 맥 주소를 사용한다
    데이터 링크계층은 Point to Point 간의 신뢰성있는 전송을 보장하기 위한 계층으로 CRC 기반의 오류제어와 흐름 제어가 필요
    네트워크 위의 개체들 간 데이터를 전달하고,물리 계층 에서 발생할 수 있는 오류를 찾아 내고 수정하는 데 필요한 기능적,절차적 수단을 제공

    주소 값은 물리적으로 할당 받고 이는 네트워크 카드가 만들어질 때부터 맥 주소가 정해져 있다는 뜻
    주소 체계는 계층이 없는 단일구조이며 데이터 링크 계층의 가장 잘알려진 예는 이더넷이다
    프레임에 주소를 부여 하여 에러검출/재전송/흐름제어 수행

    * 맥 주소란?
        기본개념은 하드웨어주소 또는 물리주소라고 불리며 48비트(6바이트)길이의 값으로 16진수로 표현
        각 네트워크 장치에 "유일한 값"이 부여된다
        특징으로는
        1. IP 주소와 달리 MAC주소는 같은 네트워크(LocalNetwork) 내에서만 사용되며
            네트워크장치 간 데이터를 주고받을 떄 MAC 주소를 활용한다
        2. MAC 주소는 하드웨어에 내장되어 있지만 소프트웨어적으로 변경(MAC 스푸핑) 할수 있으며
            리눅스,윈도우에서 임시 변경이 가능하다 (ifconfig, netsh 명령어 사용)
        3. 네트워크에서는 IP주소를  MAC주소로 변환하기 위해 ARP 프로토콜을 함께 사용한다

        결론적으로 MAC 주소는 네트워크 카드의 고유 식별자로, 네트워크 내에서 장치를 식별하는데 사용되며
        48비트(6바이트)로 구성되어있고 16진수로 표현된 "유일한 값" 이다
        또한 IP 주소와 달리 네트워크 내부에서만 사용되며 ARP프로토콜과 함께 작동한다
        네트워크 보안,DHCP,트래픽 모니터링 등 다양한 활용 가능

3. 네트워크 계층(Network Layer)
- 이 계층의 중요 기능은 데이터를 목적지까지 가장 안전하고 빠르게 전달하는 기능(라우팅)이다
    경로를 선택하고 주소를 정하고 경로에 따라 패킷을 전달해주는 것이 이계층의 핵심 역할이라고 볼 수 있다
    
    네트워크 계층은 여러개의 노드를 거칠때마다 경로를 찾아주는 역할을 하는 계층으로 다양한 길이의 데이터를 
    네트워크들을 통해 전달하고 그 과정에서 전송 계층이 요구하는 서비스 품질(QoS)을 제공하기 위한 기능적/절차적 수단을 제공

    데이터를 연결하는 다른 네트워크를 통해 전달함으로써 인터넷이 가능하게 만드는 계층이다
    논리적인 주소 구조(IP) 곧 네트워크 관리자가 직접 주소를 할당하는 구조를 가지며 계층적이다

    서브네트의 최상위 계층으로 경로를 설정하고 청구 정보를 관리하며 개방형 시스템들의 사이에서 네트워크연결을 설정 , 유지 , 해제하는 기능을 부여하고
    전송 계층 사이에 네트워크 서비스 데이터 유닛을 교환하는 기능을 제공하기

*IP 계층
    TCP/IP 상에서 IP계층이란 네트워크의 주소 (IP 주소)를 정의하고 IP 패킷의 전달 및 라우팅을 담당
    OSI 7계층모델의 관점에서 보면 IP계층은 네트워크계층에 해당한다 즉 패킷을 목적지까지 전달하는 역할 및 그에 수반되는 기타역할을 함
    
    주요역할로는 하위계층인 데이터링크 계층의 하드웨어적인 특성에 관계없이 독립적인 역할을 수행

    주요프로토콜은 패킷의 전달을 책임지는 IP, 패킷 전달 에러의 보고 및 진단을 위한 ICMP, 복잡한 네트워크에서 인터네트워킹을 위한 경로를 찾게해주는 라우팅 프로토콜

*IP 프로토콜
    TCP/IP 기반의 인터넷 망을 통하여 데이타그램의 전달을 담당하는 프로토콜

    1. 주요기능
    - IP 계층에서 IP 패킷의 라우팅 대상이 됨
    - IP 주소 지정

    2. 주요특징
    - 신뢰성(에러제어)과 흐름제어 기능이 없다 IP는 데이터를 보내긴 하지만 , 중간에 오류가 발생하거나 데이터가 유실되더라도 스스로 고치지 않는다
    쉽게말해 일단 보내고보자 라는 방식
    오류를 감지하거나 재전송을 보장하는 기능은 IP가아닌 상위 계층인 TCP가 담당

    - 비연결성 방식 , 데이터를 보낼 때 송신자와 수신자가 미리 연결을 설정하지않는다.
        보낼게 받을꺼야? 응 받을꺼야 이러한 커넥션 과정이없이 일단 보낸다

    - 신뢰성을 보장하지않는다 IP는 데이터를 보낼 때 데이터가 유실/손실 될수 있고, 중복으로 도착하기도하며 지연되거나 순서가 발뀔수있지만, 이런문제를 방지하거나 고치는 기능은 없다

    - IP 패킷에는 데이터를 보내는 발신지 IP 주소와 받는 수신지 IP 주소가 포함되어있기 때문에 패킷이 어디서 왔는지 어디로 가야하는지 알수있다

    - IP에서는 데이터를 보낼때 큰자리수 부터 먼저 보낸다 예를들어 1234를 전송하면 1->2->3->4 순서로 보냄

    - IP 위에서는 다양한 프로토콜이 동작하며 주요 프로토콜로는
        1. TCP : 신뢰성 있는 전송 (웹,이메일)
        2. UDP : 빠른 전송 (영상 스트리밍, 온라인게임)
        3. ICMP : 오류 보고 및 진단 (핑 명령어)
        4. IGMP : 멀티캐스트 그룹 관리 (동영상 방송)
      IP는 데이터를 직접 관리하지 않고, 이러한 프로토콜을 실어서 보낸다
      쉽게생각하면 IP는 택배기사 역할이고, TCP,UDP,ICMP,IGMP는 택배상자에 들어있는 내용물이라고 생각하면된다
      정확한 전송이 필요하면 TCP, 빠른 전송이 필요하면 UDP, 오류 보고가 필요하면 ICMP, 멀티캐스트 그룹 관리가 필요하면 IGMP를 사용

4. 전송 계층(Transport Layer)
- 통신을 활성화하기 위한 계층이다 보통 TCP프로토콜을 이용하며 포트를 열어서 응용프로그램들이 전송을 할수있게한다
    만약 데이터가 왔다면 4계층에서 해당 데이터를 하나로 합쳐서 5계층으로 전달한다
    TCP 프로토콜은 흐름제어 + 오류제어 기능을 모두 포함하고있어 안정적인 통신을 보장한다
    오류제어는  신뢰성있는 데이터 전송을 위해 오류를 검출하고 수정하는 역할
    흐름제어는 송신 속도를 조절하여 네트워크 혼잡을 방지하고 효율적인 데이터 전송을 가능하게한다
*TCP 프로토콜
    OSI 계층모델의 관점에서 전송 계층(4계층)에 해당하며
    신뢰성이 있다 패킷 손실, 중복, 순서바뀜 등이 없도록 보장
    TCP 하위게층인 IP 계층의 신뢰성없는 서비스에 대한 다방면으로 신뢰성을 제공
    또한 연결지향적이다 같은 전송계층의 UDP가 비연결성인 것과는 달리 TCP는 연결지향적 이고 이 경우, 느슨한연결을 갖으므로 강한 연결을 의미하는 
    가상회선이라는 표현 보다는 오히려 연결지향적이라고 말할수있다

*UDP 프로토콜
    신뢰성이 낮은 프로토콜로써 완전성을 보증하지 않으나, 가상회선을 굳이 확립할 필요가 없고 유연하며 효율적 응용 데이터 전송에 사용
    TCP와는 다르게 비연결성이고 신뢰성이 없으며 순서와되지 않은 데이타그램 서비스를 제공한다
    메세지가 제대로 도착했는지 확인하지않으며 수신된 메세지의 순서를 맞추지 않고 흐름 제어를 위한 피드백을 제공하지않음
    검사합을 제외한 특별한 오류 검출 및 제어 없음
    그러므로 UDP를 사용하는 프로그램 쪽에서 오류제어 기능을 스스로 갖추어야한다

    빠른요청과 응답이 필요한 실시간 응용에 적합하며 여러 다수 지점에 전송이 가능 (멀티캐스팅)
    또한 헤더가 단순하다 TCP처럼 16비트의 포트번호를 사용하나, 헤더는 고정크기의 8 바이트(TCP는 20바이트)만 사용 즉 헤더 처리에 많은 시간과 노력을 요하지 않음

5. 세션 계층(Session Layer)
- 데이터가 통신하기 위한 논리적인 연결을 말하며 세션 계층은 4계층과 무관하게 응용 프로그램 관점에서 봐야한다
    세션 설정, 유지, 종료, 전송 중단시 복구 등의 기능이 있다
    세션계층은 양 끝단의 응용프로세스가 통신을 관리하기 위한 방법을 제공한다
    동시 송수신 방식 , 반이중 방식, 전이중 방식 의 통신과 함께 체크포인팅과 유휴, 종료, 다시 시작 과정 등을 수행한다
    이계층은 TCP/IP 세션을 만들고 없애는 책임을 진다 

6. 표현 계층(Presentation Layer)
- 데이터 표련이 상이한 응용 프로세스의 독립성을 제공하고 암호화 한다
    표현 계층은 코드 간의 번역을 담당하여 사용자 시스템에서 데이터의 형식상 차이를 다루는 부담을 응용 계층으로부터 덜어준다
    MIME 인코딩이나 암호화 등의 동작이 이 계층에서 이루어진다
    예를 들면 EBCDI로 인코딩된 문서 파일을 ASCII로 변환하거나 해당 데이터가 TEXT인지, 그림인지, GIF인지 JPG인지의 구분 등이 표현 계층의 몫이다
    * 사용자의 명령어를 완성 및 결과 표현 포장/압축/암호화

7. 응용 계층(Application Layer)
- 최종 목적지로서 HTTP, FTP, SMTP, POP3, IMAP, Telnet 등과 같은 프로토콜이 있으며
    해당 통신 패킷들은 방금 나열한 프로토콜에 의해 모두 처리되며 우리가 사용하는 브라우저나, 메일 프로그램은 프로토콜을 보다 쉽게 사용하게 해주는
    응용프로그램이다
    한마디로 모든 통신의 양 끝단은 HTTP와 같은 프로토콜이지 응용프로그램이 아니다

    응용계층은 응용 프로세스와 직접 관계하여 일반적인 응용 서비스를 수행한다
    일반적인 응용 서비스는 관련된 응용 프로세스들 사이의 전환을 제공하고
    
* HTTP 프로토콜
    웹 상에서 웹 서버 및 웹브라우저 상호 간의 데이터 전송을 위한 응용계층 프로토콜  처음에는 WWW 상의 하이퍼텍스트 형태의 문서를 전달하는데 주로 이용했지만 현재에는 이미지 비디오 음성 등 거의 모든 형식의 데이터 전송가능

    1. 요청 및 응답의 구조
    2.메세지 교환 형태의 프로토콜
    3. 트랜잭션 중심의 비연결성 프로토콜
    4. 전송계층 TCP 프로토콜 사용 및 80번포트사용
    